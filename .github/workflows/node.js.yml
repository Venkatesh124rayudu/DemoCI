# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, run tests, and deploy to Render
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI/CD

on:
  push:
    branches: [ "master" ]

jobs:
  # Continuous Integration Job
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build --if-present
      
    - name: Run tests
      run: npm test

  # Continuous Deployment Job
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test  # Only deploy if tests pass
    if: github.ref == 'refs/heads/master'  # Only deploy from master branch
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Render
      run: |
        echo "üöÄ Deploying to Render..."
        response=$(curl -s -w "\n%{http_code}" -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys")
        
        http_code=$(echo "$response" | tail -n1)
        body=$(echo "$response" | head -n -1)
        
        if [ "$http_code" -eq 201 ]; then
          echo "‚úÖ Deployment triggered successfully!"
          echo "$body" | jq '.'
        else
          echo "‚ùå Deployment failed with HTTP $http_code"
          echo "$body"
          exit 1
        fi
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        
    - name: Deployment Status
      run: |
        echo "üéâ Deployment completed!"
        echo "Check your application at: https://your-app-name.onrender.com"